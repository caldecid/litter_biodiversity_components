# relationship between riparian forest and litter input -------------------

##packages

library(FD)
library(ade4)
library(vegan)
library(picante)
library(sp)
library(rgdal)
library(dplyr)
library(tidyr)
library(lme4)
library(ggplot2)
library(jtools)
library(lmerTest)
library(tibble)
library(MuMIn)

##loading litter input matrix

litter.input <- read.table("litter.input.txt", sep = "", header = TRUE, row.names = NULL)


## loading riparian community matrix

community <- read.table("community.txt", sep = "", header = TRUE, row.names = 1)




## loading litter traits 

litter.traits <- read.table("litter.traits.txt", sep = "", header = TRUE, row.names = 1)


## loading community traits

com.traits <- read.table("com.traits.txt", sep = "", header = TRUE, row.names = 1)

## excluding Geonoma_brevispatha from community and com.traits
community <- community[,-17]

com.traits <- com.traits[-17,]

litter.traits <- litter.traits[-7, ]

# Mass Ratio hypothesis (MRh) ---------------------------------------------


##CWM function
CWM.vector <- function(x,y){
  #x = community matrix
  #y = traits matrix
  #verify that traits sp coincide with community sp
  y<- y[colnames(x),]
  z<-dbFD(y, x)$CWM
  return(z)
}

##CWM for the riparian community
com.cwm <- CWM.vector(community, com.traits)

com.cwm$Community <- rownames(com.cwm)

##creating the general matrix for analyzing the data

mrh.matrix <- left_join(litter.input, com.cwm, by = "Community")

##creating two dataframes. Presence-absence and abundance as suggested by Fletcher et al. 2005

##presence-absence matrix

presence <- as.numeric(mrh.matrix$Biomass > 0)

mrh.pre.abs <- bind_cols(mrh.matrix, presence)

names(mrh.pre.abs)[25] <- "presence"

##abundance matrix

mrh.abundance <- filter(mrh.matrix, Biomass > 0)

#############max_DAP###################

##p-abs 
m.p.abs.max_dap <- glmer(presence ~ max_DAP  + (1|Period),
                         data = mrh.pre.abs, family = binomial)

summary(m.p.abs.max_dap)

## abundance
m.abun.max_dap <- glmer(Biomass ~ max_DAP + Input  + (1|Period),
                        data = mrh.abundance, family = Gamma("log"))
                      
summary(m.abun.max_dap)

###############max_H################

##presence-absence
m.p.abs.max_h <- glmer(presence ~ max_H + (1|Period),
                       data = mrh.pre.abs, family = binomial)

summary(m.p.abs.max_h)

##abundance
m.abun.max_h <- glmer(Biomass ~ max_H + Input + (1|Period),
                        data = mrh.abundance, family = Gamma("log"))

summary(m.abun.max_h)


#############density###############

##presence-absence
m.p.abs.den <- glmer(presence ~ density + (1|Period),
                     data = mrh.pre.abs, family = binomial)

summary(m.p.abs.den)

##abundance
m.abun.den <- glmer(Biomass ~ density + Input + (1|Period),
                      data = mrh.abundance, family = Gamma("log"))

summary(m.abun.den)

###model comparison
m.abun.den.null <- glmer(Biomass ~ Input + (1|Period),
                         data = mrh.abundance, family = Gamma("log"))

anova(m.abun.den, m.abun.den.null)

ggplot(data = mrh.abundance, mapping = aes(x = density, y = Biomass))+
  geom_point(mapping = aes(col = Input))+
  geom_smooth(method = "glm")



# Niche complementarity hypothesis NCH ------------------------------------

#####Functional Divergence vector


FDiv.vector <- function(x,y){
  #x = community matrix
  #y = traits matrix
  #verify that traits sp coincide with community sp
  y<- y[colnames(x),]
  z<-dbFD(y, x)$FDiv
  return(z)
}



##Functional Richness vector
FRic.vector <- function(x,y){
  #x = community matrix
  #y = traits matrix
  #verify that traits sp coincide with community sp
  y<- y[colnames(x),]
  z<-dbFD(y, x)$FRic
  return(z)
}



##functional eveness vector
FEve.vector <- function(x,y){
  #x = community matrix
  #y = traits matrix
  #verify that traits sp coincide with community sp
  y<- y[colnames(x),]
  z<-dbFD(y, x)$FEve
  return(z)
}

###nch variables for community
nch.variables <- select(community, contains("_"))%>%
  transmute(FDiv = FDiv.vector(community, com.traits))%>%
  mutate(FRic = FRic.vector(community, com.traits))%>%
  mutate(FEve = FEve.vector(community, com.traits))%>%
  mutate(simpson = diversity(community, index = "simpson"))

richness<- numeric()
for(i in 1:nrow(community)){
  richness[i] <- sum(community[i,]>0)
}
richness
nch.variables$richness <- richness
nch.variables$Community <- rownames(nch.variables)

##creating the expanded matrix for analyzing the data

nch.matrix <- left_join(litter.input, nch.variables, by = "Community")

##two dataframes. Pre-abs and abundance as suggested by Fletcher et al. 2005

##presence-absence matrix

presence <- as.numeric(nch.matrix$Biomass > 0)

nch.pre.abs <- bind_cols(nch.matrix, presence)

names(nch.pre.abs)[27] <- "presence"

##abundance matrix

nch.abundance <- filter(nch.matrix, Biomass > 0)

############richness##############

##pre.abs
m.pre.abs.rich <- glmer(presence ~ richness + (1|Period), data = nch.pre.abs,
                        family = binomial)

summary(m.pre.abs.rich)

##abundance
m.abun.rich <- glmer(Biomass ~ richness + Input + (1|Period),
                     data = nch.abundance, family = Gamma("log"))

summary(m.abun.rich)

#############Simpson##################

##pre.abs
m.pre.abs.simp <-  glmer(presence ~ simpson + (1|Period), data = nch.pre.abs,
                           family = binomial)

summary(m.pre.abs.simp)

##abundance
m.abun.simp <- glmer(Biomass ~ simpson + Input + (1|Period),
                     data = nch.abundance, family = Gamma("log"))

summary(m.abun.simp)

############FDiv#####################

##pre.abs
m.pre.abs.FDiv <- glmer(presence ~ FDiv + (1|Period), data = nch.pre.abs,
                        family = binomial)

summary(m.pre.abs.FDiv)

##abundance
m.abun.FDiv <- glmer(Biomass ~ as.factor(FDiv) + Input + (1|Period),
                     data = nch.abundance, family = Gamma("log"))

summary(m.abun.FDiv)


#############FRic#####################

##pre.abs
m.pre.abs.FRic <- glmer(presence ~ FRic + (1|Period), data = nch.pre.abs,
                        family = binomial)

summary(m.pre.abs.FRic)

##abundance
m.abun.FRic <- glmer(Biomass ~ as.factor(FRic) + Input + (1|Period),
                     data = nch.abundance, family = Gamma("log"))

summary(m.abun.FRic)

###########FEve################

##pre.abs
m.pre.abs.FEve <- glmer(presence ~ FEve + (1|Period), data = nch.pre.abs,
                        family = binomial)

summary(m.pre.abs.FEve)

##abundance
m.abun.FEve <- glmer(Biomass ~ as.factor(FEve) + Input + (1|Period),
                     data = nch.abundance, family = Gamma("log"))

summary(m.abun.FEve)



# Green soup hypothesis ---------------------------------------------------

##sum the biomass of each riparian community

green.soup <- select(community, contains("_"))%>%rowwise()%>% 
  summarise(cBiomass = sum(c_across(where(is.numeric))))%>%
  bind_cols(rownames(community))

names(green.soup)[2] <- "Community"

##merging matrices
green.soup.matrix <- left_join(litter.input, green.soup, by = "Community")

####two dataframe for the separated analysis###

##abundance
green.abundance <- filter(green.soup.matrix, Biomass > 0)

##presence-absence matrix
presence <- as.numeric(green.soup.matrix$Biomass > 0)

green.pre.abs <- bind_cols(green.soup.matrix, presence)

names(green.pre.abs)[23] <- "presence"

############Community biomass##############

##pre.abs
m.pre.abs.cbiomass <- glmer(presence ~ cBiomass + (1|Period),
                            data = green.pre.abs, family = binomial("probit"))

summary(m.pre.abs.cbiomass)

##abundance
m.abun.cbiomass <- glmer(Biomass ~ cBiomass + Input + (1|Period),
                     data = green.abundance, family = Gamma("log"))

summary(m.abun.cbiomass)



m.abun.cbiomass.null <- glmer(Biomass ~ Input + (1|Period),
                              data = green.abundance, family = Gamma("log"))

summary(m.abun.cbiomass.null)

anova(m.abun.cbiomass, m.abun.cbiomass.null)



# biomass ~ Input type graphic --------------------------------------------

###Only input type had a significant effect over litter biomass

###fitting model for only evaluating this relationship
m.abundance.vs.input <- glmer(Biomass ~ Input + (1|Period),
                              data = green.abundance, family = Gamma("log"))

summary(m.abundance.vs.input)

###model comparison
m.abund.null <- glmer(Biomass ~ (1|Period),
                      data = green.abundance, family = Gamma("log"))

anova(m.abundance.vs.input, m.abund.null) ##input is a significant factor


###post hoc test 
library(multcomp)
post.input <- glht(m.abundance.vs.input, linfct = mcp(Input = "Tukey"))
summary(post.input) ##october is significant diferently than january and almost different than july

###r conditional and marginal
r.biomass <- r.squaredGLMM(m.abundance.vs.input)
r.biomass
summary(r.biomass)

#####litter biomass ~ input type graphic#######

library(ggsignif)
##defining fonts, faces and sizes  
mynamestheme <- theme(axis.title = element_text(family = "serif", size = (13), face = "bold"),
                      axis.text = element_text(family = "serif", size = (11)))

##png object
png("abundance.vs.input.png", width = 16, height = 12, units = "cm", pointsize = 8, res = 300)

##ggplot basic information
abundance.vs.input <- ggplot(data = green.abundance, aes(x = Input, y = Biomass))

##ggplot complement
x = abundance.vs.input + geom_boxplot(width=0.3, fill="gray90")
p = x + labs(x = "Input type", 
             y = "Litter Biomass (g/m^2)")+
  theme_bw() + geom_jitter(shape=16, size = 2, position=position_jitter(0.4))

o = p+geom_signif(comparisons = list(c("vertical", "lateral")), 
                  map_signif_level=TRUE)+
  geom_signif(comparisons = list(c("vertical", "terrestrial")), 
              map_signif_level=TRUE)


o+mynamestheme

dev.off()

# Total Input riparian community indices vs litter input indices -----------------------

total.input <- read.table("tot.dyn.txt", sep = "", header = TRUE, row.names = NULL)

##changing the litter.traits matrix to C/N, exclud leaf_area because is redundant
##changing the dyn.traits and dividing C between N##
litter.traits.cn <- rownames_to_column(litter.traits, "species")%>%
  mutate(c.n = Carbon/Nitrogen)%>%
  select(-c(Leaf_Area, Carbon, Nitrogen))%>%
  drop_na()%>%
  column_to_rownames("species")

total.input2 <- select(total.input, contains("_") )

total.matrix<- mutate(total.input, litter.FDiv = FDiv.vector(total.input2, litter.traits.cn))%>%
  mutate(litter.FRic = FRic.vector(total.input2, litter.traits.cn))%>%
  mutate(litter.FEve = FEve.vector(total.input2, litter.traits.cn))%>%
  mutate(litter.simpson = diversity(total.input[,3:18], index = "simpson"))


###calculating litter richness

litter.richness <- numeric()
for(i in 1:nrow(total.input2)){
  litter.richness[i] <- sum(total.input2[i,]>0)
}
litter.richness
total.matrix$litter.richness <- litter.richness
total.matrix$Period <- c(rep("rainy", 6), rep("rain-dry", 6),
                         rep("dry",6), rep("dry-rain", 6))
total.matrix <- total.matrix %>% drop_na()

##calculating community variables
com.variables <- select(community, contains("_"))%>%
  transmute(com.FDiv = FDiv.vector(community, com.traits))%>%
  mutate(com.FRic = FRic.vector(community, com.traits))%>%
  mutate(com.FEve = FEve.vector(community, com.traits))%>%
  mutate(com.simpson = diversity(community, index = "simpson"))

richness<- numeric()
for(i in 1:nrow(community)){
  richness[i] <- sum(community[i,]>0)
}

com.variables$com.richness <- richness
com.variables$Community <- rownames(com.variables)
com.variables

##merging both dataframes
total.analysis <- left_join(total.matrix, com.variables, by = "Community") %>%
  select( -contains("_"))


########richnes vs richness

m.ric.vs.ric <- lmer(litter.richness ~ com.richness * Period  + (1|Community),
                     REML = FALSE,
                     data = total.analysis) ### It is singular



###simpson vs simpson
m.sim.vs.sim <- lmer(litter.simpson ~ com.simpson * Period + (1|Community),
                     REML = FALSE,
                     data = total.analysis) ###It is singular


###### FDiv vs FDiv

m.fdiv.vs.fdiv <- lmer(litter.FDiv ~  com.FDiv * Period + (1|Community),
                       REML = FALSE, data = total.analysis)
fdiv.m <- summary(m.fdiv.vs.fdiv) ##the interaction com.FDiv and Rain was significant


###model comparison

###null model with control
m.fdiv.null.p <- lmer(litter.FDiv ~  Period + (1|Community),
                    REML = FALSE, data = total.analysis)

anova(m.fdiv.vs.fdiv, m.fdiv.null.p) ##com.FDiv is a significant variable

###null model without predictors
m.fdiv.null <- lmer(litter.FDiv ~ (1|Community),
                    REML = FALSE, data = total.analysis)

anova(m.fdiv.vs.fdiv, m.fdiv.null) ##significant
###testing the significance of the climatic period
anova(m.fdiv.null.p, m.fdiv.null) ## was not significant

###evaluating the model

##Checking assumptions about the model
hist(fdiv.m$residuals) ##does not seem entirely normal

qqnorm(fdiv.m$residuals)
qqline(fdiv.m$residuals) ##some residuals fall outside of the line

plot(m.fdiv.vs.fdiv) ##there are some aggrupation from the graph's middle

#r2 conditional and marginal
r2.fdiv <- r.squaredGLMM(m.fdiv.vs.fdiv)
r2.fdiv


plot(m.fdiv.vs.fdiv, litter.FDiv ~ fitted(.))

#####FDIV VS FDIV graphic

##exploring different graphics
ggscatter(
  total.analysis, x = "com.FDiv", y = "litter.FDiv",
  color = "Period", add = "reg.line"
)+
  stat_regline_equation(
    aes(label =  paste(..eq.label.., ..rr.label.., sep = "~~~~"), color = Period)
  )

##traditional
plot(total.analysis$com.FDiv, total.analysis$litter.FDiv, ty="n")
points(total.analysis$com.FDiv[1:6],total.analysis$litter.FDiv[1:6])
points(total.analysis$com.FDiv[7:11],total.analysis$litter.FDiv[7:11],pch=16)
points(total.analysis$com.FDiv[12:17],total.analysis$litter.FDiv[12:17], pch = 16, col="red")
points(total.analysis$com.FDiv[18:23],total.analysis$litter.FDiv[18:23], col="blue")

###model of the significant interaction (com.fdiv:rain)
fdiv.rain <- lm(total.analysis$litter.FDiv[1:6]~total.analysis$com.FDiv[1:6])
summary(fdiv.rain)
confint(fdiv.rain)
c.fdiv.r<- coef(fdiv.rain)
int.fdiv <- c.fdiv.r[1]
sl.fdiv <- c.fdiv.r[2]
abline(fdiv.rain)

###ggplot
ggplot(data = total.analysis, mapping = aes(x = com.FDiv, y = litter.FDiv, color = Period))+
  geom_point() +  geom_abline(intercept = int.fdiv, slope = sl.fdiv) 

#######png comfdiv vs litter fdiv#######

##defining fonts, faces and sizes  
mynamestheme <- theme(strip.text = element_text(family = "serif", size = (10)),
                      axis.title = element_text(family = "serif", size = (13), face = "bold"),
                      axis.text = element_text(family = "serif", size = (11)))

##png object
png("FDiv.com.vs.litter.png", width = 16, height = 12, units = "cm", pointsize = 8, res = 300)

##ggplot basic information
FDiv.com.vs.litter <- ggplot(data = total.analysis, aes(x = com.FDiv, y = litter.FDiv))
##ggplot complement

p = FDiv.com.vs.litter+geom_point(size = 3, alpha = 0.8)+
  facet_wrap(~Period)+
  geom_smooth(data = subset(total.analysis, Period == "rainy"), method = "lm", se = T, color = "black")+
  labs(x = "Riparian Community FDiv index", 
       y = "Total Input FDiv index")
  

p + mynamestheme

dev.off()

####now the graphis of the rainy period explaining litter FDiv
m.fdiv.null.p <- lmer(litter.FDiv ~  Period + (1|Community),
                      REML = FALSE, data = total.analysis)

anova(m.fdiv.null.p, m.fdiv.null) ##it is not significant. Thus, period alone is not a good predictor

post.fdiv.period <- glht(m.fdiv.null.p, linfct = mcp(Period = "Tukey"))
summary(post.fdiv.period) ##not significant. 

## FEve vs FEve
m.feve.vs.feve <- lmer(litter.FEve ~ com.FEve* Period + (1|Community),
                       REML = FALSE, data = total.analysis)

summary(m.feve.vs.feve) ##It is singular




## FRic vs FRic
m.fric.vs.fric <- lmer(litter.FRic ~ com.FRic * Period + (1|Community), REML = FALSE,
                       data = total.analysis)
summary(m.fric.vs.fric) ##It is singular



# full litter input vs riparian community ---------------------------------


litter.abundance <- filter(litter.input, Biomass > 0)

##measuring the functional and simpson indices for litter abundance

litter.species <- select(litter.abundance, contains("_") )

litter.matrix<- mutate(litter.abundance, litter.FDiv = FDiv.vector(litter.species, litter.traits.cn))%>%
  mutate(litter.FRic = FRic.vector(litter.species, litter.traits.cn))%>%
  mutate(litter.FEve = FEve.vector(litter.species, litter.traits.cn))%>%
  mutate(litter.simpson = diversity(litter.species, index = "simpson"))

litter.richness<- numeric()
for(i in 1:nrow(litter.matrix)){
  litter.richness[i] <- sum(litter.species[i,]>0)
}

litter.matrix$litter.richness <- litter.richness

###excluding species and NA observations
litter.matrix <- select(litter.matrix, -contains("_")) %>%
                  drop_na()

                        
##calculating riparian community variables
com.variables <- select(community, contains("_"))%>%
  transmute(com.FDiv = FDiv.vector(community, com.traits))%>%
  mutate(com.FRic = FRic.vector(community, com.traits))%>%
  mutate(com.FEve = FEve.vector(community, com.traits))%>%
  mutate(com.simpson = diversity(community, index = "simpson"))

richness<- numeric()
for(i in 1:nrow(community)){
  richness[i] <- sum(community[i,]>0)
}

com.variables$com.richness <- richness
com.variables$Community <- rownames(com.variables)

###merging litter matrix and community variables

litter.vs.com <- left_join(litter.matrix, com.variables, by = "Community")


###############linear mixed effect models #############

########richnes vs richness

ric.vs.ric <- lmer(litter.richness ~ com.richness * Period+ (1|Community),
                     REML = FALSE,
                     data = litter.vs.com)

ric.m <- summary(ric.vs.ric) ###interaction is significative and singular with total analysis

###model comparison

##null model controlling Period
ric.vs.ric.null.p <- lmer(litter.richness ~ Period+ (1|Community),
                        REML = FALSE,
                        data = litter.vs.com)

anova(ric.vs.ric, ric.vs.ric.null.p) ##com.richness is not a significant variable

##Null model without predictors
ric.vs.ric.null <- lmer(litter.richness ~ 1+ (1|Community),
                        REML = FALSE,
                        data = litter.vs.com)

anova(ric.vs.ric, ric.vs.ric.null) ##also is not significant

### the signifciance of period
anova(ric.vs.ric.null.p, ric.vs.ric.null)

###evaluating the model

##Checking assumptions about the model
hist(ric.m$residuals) ##seems a little bit normal

qqnorm(ric.m$residuals)
qqline(ric.m$residuals) ##seems quite ajusted to the line

plot(ric.vs.ric) ##there is no distinguishable pattern

#r2 conditional and marginal
r2.ric <- r.squaredGLMM(ric.vs.ric)
r2.ric


plot(ric.vs.ric, litter.richness ~ fitted(.))

###simpson vs simpson
sim.vs.sim <- lmer(litter.simpson ~ com.simpson * Period+ (1|Community),
                   REML = FALSE,
                   data = litter.vs.com)
sim.s <- summary(sim.vs.sim) ###only intercept 

#####model comparisons

##null model with control
sim.null.p <- lmer(litter.simpson ~  Period+ (1|Community),
                   REML = FALSE,
                   data = litter.vs.com)

anova(sim.vs.sim, sim.null.p) ##not significant

###null model without predictors
sim.null <- lmer(litter.simpson ~ (1|Community),
                 REML = FALSE,
                 data = litter.vs.com)

anova(sim.vs.sim, sim.null)###not significant

r2.sim <- r.squaredGLMM(sim.vs.sim)
r2.sim

###FDiv vs FDiv
FDiv.vs.FDiv <- lmer(litter.FDiv ~ com.FDiv * Period + (1|Community),
                     REML = FALSE,
                     data = litter.vs.com) 
##is singular


##FRic vs FRic
FRic.vs.FRic <- lmer(litter.FRic ~ com.FRic * Period+ (1|Community),
                     REML = FALSE,
                     data = litter.vs.com)
FRic.s <- summary(FRic.vs.FRic) ##only intercept 

##model comparison

###null model with control
FRic.null.p <- lmer(litter.FRic ~  Period+ (1|Community),
                    REML = FALSE,
                    data = litter.vs.com)

anova(FRic.vs.FRic, FRic.null.p) ##not significant

###null model without predictors
FRic.null <- lmer(litter.FRic ~ (1|Community),
                  REML = FALSE,
                  data = litter.vs.com)

anova(FRic.vs.FRic, FRic.null) ##not significant

##R squared
r2.fric <- r.squaredGLMM(FRic.vs.FRic)
r2.fric

##FEve vs FEve
FEve.vs.FEve <- lmer(litter.FEve ~ com.FEve * Period+ (1|Community),
                     REML = FALSE,
                     data = litter.vs.com)#singular with both data frames

